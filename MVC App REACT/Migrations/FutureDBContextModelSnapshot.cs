// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MVC_App_REACT.Models;
using System;

namespace MVCAppREACT.Migrations
{
    [DbContext(typeof(FutureDBContext))]
    partial class FutureDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Brands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Brands_Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrandsId");

                    b.Property<int>("CategoriesId");

                    b.HasKey("Id");

                    b.HasIndex("BrandsId");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Brands_Category");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Factuur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FactuurBon");

                    b.Property<int?>("GebruikerId");

                    b.Property<int>("GebruikersId");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.ToTable("Facturen");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+FactuurLijsten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GebruikerId");

                    b.Property<int>("GebruikersUsername");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.ToTable("FactuurLijst");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Favorieten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FavorietenLijstenId");

                    b.Property<int>("ProductsId");

                    b.HasKey("Id");

                    b.HasIndex("FavorietenLijstenId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Favoriet");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+FavorietenLijsten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GebruikerId");

                    b.Property<string>("GebruikersUsername");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GebruikerId");

                    b.ToTable("FavorietenLijst");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("EMail");

                    b.Property<string>("Geboortedatum");

                    b.Property<string>("Huisnummer");

                    b.Property<string>("Postcode");

                    b.Property<string>("Stad");

                    b.Property<string>("Straat");

                    b.Property<int>("Telefoonnummer");

                    b.Property<string>("Username");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("gebruiker");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Laptops", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount_Sold");

                    b.Property<string>("Description");

                    b.Property<string>("Image_Path");

                    b.Property<float>("Price");

                    b.Property<string>("Short_Description");

                    b.Property<int>("Stock");

                    b.HasKey("Id");

                    b.ToTable("Laptop");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+OngeregistreerdeFactuur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FactuurBon");

                    b.Property<int>("OngeregistreerdeGebruikersId");

                    b.HasKey("Id");

                    b.HasIndex("OngeregistreerdeGebruikersId");

                    b.ToTable("OngeregistreerdeFacturen");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+OngeregistreerdeGebruikers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("EMail");

                    b.Property<string>("Huisnummer");

                    b.Property<string>("Postcode");

                    b.Property<string>("Stad");

                    b.Property<string>("Straat");

                    b.Property<int>("Telefoonnummer");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("OngeregistreerdeGebruiker");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount_Sold");

                    b.Property<int>("BrandsId");

                    b.Property<int>("CategoriesId");

                    b.Property<string>("Compatibility");

                    b.Property<string>("Description");

                    b.Property<float>("Price");

                    b.Property<string>("Short_Description");

                    b.Property<string>("Specification");

                    b.Property<int>("Stock");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BrandsId");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+RecommendedSystems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Gebruik");

                    b.Property<string>("Image_Path");

                    b.Property<string>("Level");

                    b.Property<string>("Long_Description");

                    b.Property<int>("ProductsId");

                    b.Property<string>("Short_Description");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.ToTable("RecommendedSystem");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Brands_Categories", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Brands", "Brands")
                        .WithMany()
                        .HasForeignKey("BrandsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Factuur", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Gebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerId");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+FactuurLijsten", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Gebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerId");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Favorieten", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+FavorietenLijsten", "FavorietenLijsten")
                        .WithMany()
                        .HasForeignKey("FavorietenLijstenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+FavorietenLijsten", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Gebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerId");
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+OngeregistreerdeFactuur", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+OngeregistreerdeGebruikers", "OngeregistreerdeGebruikers")
                        .WithMany()
                        .HasForeignKey("OngeregistreerdeGebruikersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+Products", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Brands", "Brands")
                        .WithMany()
                        .HasForeignKey("BrandsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MVC_App_REACT.Models.FutureDBContext+RecommendedSystems", b =>
                {
                    b.HasOne("MVC_App_REACT.Models.FutureDBContext+Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
